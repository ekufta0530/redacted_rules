rules:
- id: gin-command-injection-taint
  message: 'Untrusted input might be injected into a command executed by the application,
    which can lead to a command injection vulnerability. An attacker can execute arbitrary
    commands, potentially gaining complete control of the system. To prevent this
    vulnerability, avoid executing OS commands with user input. If this is unavoidable,
    validate and sanitize the input, and use safe methods for executing the commands.
    In Go, it is possible to use the `exec.Command` function in combination with the
    `bash -c` command to run the user input as a shell command. To sanitize the user
    input, you can use a library like `shellescape` to escape any special characters
    before constructing the command. For more information, see: [Go command injection
    prevention](https://semgrep.dev/docs/cheat-sheets/go-command-injection/)'
  cwe:
  - 'CWE-78: Improper Neutralization of Special Elements used in an OS Command (''OS
    Command Injection'')'
