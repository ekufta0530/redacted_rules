rules:
- id: go-vanillasql-format-string-sqli-taint-med-conf
  message: 'Untrusted input might be used to build a database query, which can lead
    to a SQL injection vulnerability. An attacker can execute malicious SQL statements
    and gain unauthorized access to sensitive data, modify, delete data, or execute
    arbitrary system commands. To prevent this vulnerability, use prepared statements
    that do not concatenate user-controllable strings and use parameterized queries
    where SQL commands and user data are strictly separated. Also, consider using
    an object-relational (ORM) framework to operate with safer abstractions. When
    building SQL queries in Go, it is possible to adopt prepared statements by using
    the `Prepare` and `PrepareContext` calls with parameterized queries. For more
    information, see: [Prepared statements in Go](https://go.dev/doc/database/prepared-statements).'
  cwe:
  - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command (''SQL
    Injection'')'
